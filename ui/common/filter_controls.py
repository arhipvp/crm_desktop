# ui/common/filter_controls.py

from datetime import date
from typing import Optional

from PySide6.QtCore import QDate
from PySide6.QtWidgets import (QDateEdit, QHBoxLayout, QLabel, QPushButton,
                               QWidget)

from ui.common.checkbox_filters import CheckboxFilters
from ui.common.date_utils import OptionalDateEdit, TypableDateEdit
from ui.common.search_box import SearchBox


class FilterControls(QWidget):
    """
    –ü–∞–Ω–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–æ–≤: –ø–æ–∏—Å–∫ + —á–µ–∫–±–æ–∫—Å—ã + —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ + —ç–∫—Å–ø–æ—Ä—Ç + –∫–∞—Å—Ç–æ–º–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã.

    Parameters
    ----------
    search_callback : callable
        –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –≤ –ø–æ–∏—Å–∫–µ.
    checkbox_map : dict[str, callable], optional
        –°–ª–æ–≤–∞—Ä—å –≤–∏–¥–∞ {"–ú–µ—Ç–∫–∞": —Ñ—É–Ω–∫—Ü–∏—è-–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å}, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é None.
    export_callback : callable, optional
        –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ CSV, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é None.
    search_placeholder : str, optional
        –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –ø–æ–ª—è –ø–æ–∏—Å–∫–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "–ü–æ–∏—Å–∫‚Ä¶".
    extra_widgets : list[tuple[str, QWidget]], optional
        –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã (–º–µ—Ç–∫–∞ + –≤–∏–¥–∂–µ—Ç), –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é [].
    date_filter_field : str, optional
        –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è –¥–∞—Ç—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "due_date"), –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é None.
    on_filter : callable, optional
        –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ (–¥–∞—Ç–∞/—á–µ–∫–±–æ–∫—Å—ã).
    parent : QWidget, optional
        –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç.
    show_date_range : bool, optional
        –û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ª–∏ —Ñ–∏–ª—å—Ç—Ä –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç ¬´–°/–ü–æ¬ª, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é True.
    """
    def __init__(
        self,
        search_callback,
        checkbox_map=None,
        export_callback=None,
        search_placeholder="–ü–æ–∏—Å–∫‚Ä¶",
        extra_widgets=None,
        date_filter_field: str | None = None,
        on_filter=None,
        parent=None,
        *,
        show_date_range: bool = True,
    ):
        super().__init__(parent)
        extra_widgets = extra_widgets or []

        layout = QHBoxLayout(self)
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(6)

        # –ü–æ–∏—Å–∫
        self._search = SearchBox(search_callback)
        self._search.search_input.setPlaceholderText(search_placeholder)

        if show_date_range:
            self._date_from = OptionalDateEdit()
            self._date_to = OptionalDateEdit()
            if on_filter:
                self._date_from.dateChanged.connect(on_filter)
                self._date_to.dateChanged.connect(on_filter)

            layout.addWidget(QLabel("–°:"))
            layout.addWidget(self._date_from)
            layout.addWidget(QLabel("–ü–æ:"))
            layout.addWidget(self._date_to)
        else:
            self._date_from = None
            self._date_to = None

        layout.addWidget(self._search)

        # –ß–µ–∫–±–æ–∫—Å—ã
        self._cbx = None
        if checkbox_map:
            self._cbx = CheckboxFilters(checkbox_map, self)
            layout.addWidget(self._cbx)

        # –î–∞—Ç–∞-—Ñ–∏–ª—å—Ç—Ä
        self._date_filter_field = date_filter_field
        if date_filter_field:
            self._date_edit = OptionalDateEdit()
            self._date_edit.setCalendarPopup(True)
            self._date_edit.setDisplayFormat("dd.MM.yyyy")
            self._date_edit.setDate(QDate.currentDate())
            if on_filter:
                self._date_edit.dateChanged.connect(on_filter)
            layout.addWidget(QLabel("–°—Ä–æ–∫ –¥–æ:"))
            layout.addWidget(self._date_edit)

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã
        for label, widget in extra_widgets:
            layout.addWidget(QLabel(label))
            layout.addWidget(widget)

        # –ö–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞
        if export_callback:
            export_btn = QPushButton("üì§ –≠–∫—Å–ø–æ—Ä—Ç CSV", clicked=export_callback)
            export_btn.setFixedHeight(30)
            layout.addWidget(export_btn)

        layout.addStretch()

    def get_search_text(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–ª—è –ø–æ–∏—Å–∫–∞ (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤)."""
        return self._search.get_text().strip()

    def is_checked(self, label: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —á–µ–∫–±–æ–∫—Å —Å –∑–∞–¥–∞–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π."""
        return self._cbx.is_checked(label) if self._cbx else False

    def get_date_filter(self) -> dict[str, date] | None:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å {<–∏–º—è_–ø–æ–ª—è>: date} –µ—Å–ª–∏ –¥–∞—Ç–∞ —É–∫–∞–∑–∞–Ω–∞, –∏–Ω–∞—á–µ None.
        –ü—Ä–∏–º–µ—Ä: {'due_date': datetime.date(2025, 5, 10)}
        """
        if self._date_filter_field and self._date_from and self._date_to:
            d1 = self._date_from.date_or_none()
            d2 = self._date_to.date_or_none()
            if d1 or d2:
                return {self._date_filter_field: (d1, d2)}
        return None
    
    def add_extra_widgets(self, widgets: list[tuple[str, QWidget]]):
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã –≤ —Å—Ç—Ä–æ–∫—É —Ñ–∏–ª—å—Ç—Ä–æ–≤.

        –ê—Ä–≥—É–º–µ–Ω—Ç:
            widgets ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (–º–µ—Ç–∫–∞, –≤–∏–¥–∂–µ—Ç), –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã.
        """
        for label, widget in widgets:
            self.layout().addWidget(QLabel(label))
            self.layout().addWidget(widget)

    def get_all_filters(self) -> dict:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤: —Ç–µ–∫—Å—Ç, —á–µ–∫–±–æ–∫—Å—ã, –¥–∞—Ç—ã."""
        return {
            "search": self.get_search_text(),
            "checkboxes": self._cbx.get_all_states() if self._cbx else {},
            "dates": self.get_date_filter() or {},
        }

    def clear_all(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã: –ø–æ–∏—Å–∫, –¥–∞—Ç—ã, —á–µ–∫–±–æ–∫—Å—ã."""
        self._search.clear()
        if self._cbx:
            self._cbx.clear()
        self._date_from.clear()
        self._date_to.clear()
        if hasattr(self, "_date_edit"):
            self._date_edit.clear()
